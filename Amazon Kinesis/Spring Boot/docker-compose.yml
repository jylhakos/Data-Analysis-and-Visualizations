version: '3.8'

services:
  # Spring Boot Application
  kinesis-iot-processor:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - AWS_REGION=us-east-1
      - MQTT_BROKER_URL=tcp://mosquitto:1883
      - ML_SERVICE_URL=http://ml-service:8001
    depends_on:
      - mosquitto
      - ml-service
      - localstack
    networks:
      - iot-network
    volumes:
      - ./logs:/app/logs

  # Machine Learning Service
  ml-service:
    build: ./ml-service
    ports:
      - "8001:8001"
    networks:
      - iot-network
    volumes:
      - ./ml-service/models:/app/models

  # MQTT Broker (Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - iot-network

  # LocalStack for AWS services simulation
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=kinesis,dynamodb,sqs
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "./localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - iot-network

  # IoT Sensor Simulator
  sensor-simulator:
    build: ./sensor-simulator
    depends_on:
      - mosquitto
    environment:
      - MQTT_BROKER_URL=tcp://mosquitto:1883
      - SENSOR_COUNT=5
      - INTERVAL_SECONDS=10
    networks:
      - iot-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - iot-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - iot-network

networks:
  iot-network:
    driver: bridge

volumes:
  grafana-data:
